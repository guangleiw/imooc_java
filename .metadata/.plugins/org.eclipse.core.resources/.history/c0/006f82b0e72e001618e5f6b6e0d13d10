package snake;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class Yard extends Frame{
	
	private static boolean flag = true;
	
	@Override
	public void paint(Graphics g) {
		Color c = g.getColor();
		g.setColor(c.GRAY);
		g.fillRect(0, 0, COLS*BLOCK_SIZE, ROWS*BLOCK_SIZE);
		g.setColor(c.DARK_GRAY);
		//画出横线
		for(int i = 1; i<= ROWS;i++){
			g.drawLine(0,BLOCK_SIZE*i,COLS*BLOCK_SIZE,BLOCK_SIZE*i);
		}
		
		//画出横线
		for(int i = 1; i<= COLS;i++){
			g.drawLine(BLOCK_SIZE*i,0,i*BLOCK_SIZE,BLOCK_SIZE*ROWS);
		}
		
		g.setColor(c);
		s.eat(e);
		
		e.draw(g);s.draw(g);
		
	}

	public static final int ROWS = 50;
	public static final int COLS = 50;
	public static final int BLOCK_SIZE=10;
	
	Snake s = new Snake();
	Egg e = new Egg();
	
	public void launch(){
		this.setLocation(200,200);
		this.setSize(COLS*BLOCK_SIZE, ROWS*BLOCK_SIZE);
		this.setVisible(true);
		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
//				super.windowClosing(e);
				System.exit(0);
			}});
		this.addKeyListener(new KeyMonitor());
		new Thread(new PaintThread()).start();
	}
	
	private class PaintThread implements Runnable{

		@Override
		public void run() {
			// TODO Auto-generated method stub
			while(flag){
				repaint();
				try {
					Thread.sleep(100);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}
	
	private class KeyMonitor extends KeyAdapter{

		@Override
		public void keyPressed(KeyEvent e) {
			// TODO Auto-generated method stub
			super.keyPressed(e);
			s.keyPressed(e);
//			System.out.println("After Key Press");
		}
		 
	}
	
	public  static void main(String[] args){
		new Yard().launch();
	}

	public static void stop() {
		// TODO Auto-generated method stub
		
	}

}
